// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Softheon.API.Switchboard.Client
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface ISoftheonSwitchboard : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


        /// <summary>
        /// Gets a board by the board id.
        /// </summary>
        /// <param name='id'>
        /// The identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BoardModel>> GetBoardByIdWithHttpMessagesAsync(int id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Puts the specified model.
        /// </summary>
        /// <param name='id'>
        /// The identifier.
        /// </param>
        /// <param name='model'>
        /// The model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> UpdateBoardWithHttpMessagesAsync(int id, BoardPutModel model = default(BoardPutModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the specified identifier.
        /// </summary>
        /// <param name='id'>
        /// The identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> DeleteBoardWithHttpMessagesAsync(int id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets all boards.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<BoardModel>>> GetAllBoardsWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Posts the specified model.
        /// </summary>
        /// <param name='model'>
        /// The model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BoardModel>> CreateBoardWithHttpMessagesAsync(BoardPostModel model = default(BoardPostModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets all board history for account.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<BoardHistoryModel>>> GetAllBoardHistoryForTheAccountWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the board history.
        /// </summary>
        /// <param name='id'>
        /// The identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BoardHistoryModel>> GetBoardHistoryByIdWithHttpMessagesAsync(int id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the boards by filter.
        /// </summary>
        /// <param name='model'>
        /// The model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<BoardModel>>> GetBoardsByFilterWithHttpMessagesAsync(BoardFilterModel model = default(BoardFilterModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets all switches associated with a specific board Id.
        /// </summary>
        /// <param name='boardId'>
        /// The board identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<SwitchModel>>> GetSwitchesByBoardIdWithHttpMessagesAsync(int boardId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new switch.
        /// </summary>
        /// <param name='boardId'>
        /// The board identifier.
        /// </param>
        /// <param name='switchPostModel'>
        /// The switch model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<SwitchModel>> CreateSwitchWithHttpMessagesAsync(int boardId, SwitchPostModel switchPostModel = default(SwitchPostModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a specific switch by the switch Id.
        /// </summary>
        /// <param name='id'>
        /// The identifier.
        /// </param>
        /// <param name='boardId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<SwitchModel>> GetSwitchWithHttpMessagesAsync(int id, string boardId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates the switch and places the old version in the history table.
        /// </summary>
        /// <param name='id'>
        /// The identifier.
        /// </param>
        /// <param name='boardId'>
        /// </param>
        /// <param name='switchPutModel'>
        /// The switch model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> UpdateSwitchWithHttpMessagesAsync(int id, string boardId, SwitchPutModel switchPutModel = default(SwitchPutModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes a switch and place it in the history table.
        /// </summary>
        /// <param name='id'>
        /// The identifier.
        /// </param>
        /// <param name='boardId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> DeleteSwitchVersionWithHttpMessagesAsync(int id, string boardId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a specific previous switch version.
        /// </summary>
        /// <param name='id'>
        /// The identifier.
        /// </param>
        /// <param name='boardId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<SwitchHistoryModel>> GetSwitchHistoryWithHttpMessagesAsync(int id, string boardId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets all of the previous switches for a board.
        /// </summary>
        /// <param name='boardId'>
        /// The board identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<SwitchHistoryModel>>> GetAllSwitchHistoryByBoardWithHttpMessagesAsync(int boardId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets all of the previous switches for a switch.
        /// </summary>
        /// <param name='switchId'>
        /// The switch identifier.
        /// </param>
        /// <param name='boardId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<SwitchHistoryModel>>> GetAllSwitchHistoryBySwitchWithHttpMessagesAsync(int switchId, string boardId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the users by filter.
        /// </summary>
        /// <param name='boardId'>
        /// The board identifier.
        /// </param>
        /// <param name='model'>
        /// The model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<SwitchModel>>> GetSwitchesByFilterWithHttpMessagesAsync(int boardId, SwitchFilterModel model = default(SwitchFilterModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Rollback to a previous switch.
        /// </summary>
        /// <param name='switchId'>
        /// The switch identifier.
        /// </param>
        /// <param name='switchHistoryId'>
        /// The switch history identifier.
        /// </param>
        /// <param name='boardId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> RollbackSwitchWithHttpMessagesAsync(int switchId, int switchHistoryId, string boardId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
